# -*- coding: utf-8 -*-
"""employee.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gbfZauQ0lcJheDsNHaZ4qeB1U63gnA5O
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Load the dataset
df = pd.read_csv('/content/drive/MyDrive/Ml/Models/employee_salary_100_rows.csv')

from sklearn.preprocessing import LabelEncoder

# Encode the Department column
encoder = LabelEncoder()
df['Department'] = encoder.fit_transform(df['Department'])

print(df)

from sklearn.model_selection import train_test_split

# Features and target
X = df[['Employee ID', 'Department']]
y = df['Salary']

# Split into train and test sets (80/20)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print(X_train)
print(y_train)

from sklearn.linear_model import LinearRegression

# Initialize and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Show predictions vs actual values
results = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print(results)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

from sklearn.metrics import mean_absolute_error, mean_squared_error

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print(f'MAE: {mae}')
print(f'MSE: {mse}')